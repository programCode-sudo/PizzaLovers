{"swagger": "2.0", "info": {"title": "API de la Pizzería Django", "description": "Esta es la documentación de la API para la Pizzería Django.", "termsOfService": "https://www.google.com/policies/terms/", "contact": {"email": "contacto@tusitio.com"}, "license": {"name": "Licencia MIT"}, "version": "v1"}, "host": "web-production-3c69.up.railway.app", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/administrator/changeRestaurantCupons/{restaurante_id}": {"post": {"operationId": "administrator_changeRestaurantCupons_create", "description": "Activa o desactiva los cupones de un restaurante.", "parameters": [], "responses": {"200": {"description": "Operación exitosa", "examples": {"application/json": {"message": "Cupones activados.", "cupons": true}}}, "404": {"description": "Restaurante no encontrado.", "examples": {"application/json": {"error": "Restaurante no encontrado."}}}}, "tags": ["administrator"]}, "parameters": [{"name": "restaurante_id", "in": "path", "required": true, "type": "string"}]}, "/administrator/changeRestaurantPoints/{restaurante_id}": {"post": {"operationId": "administrator_changeRestaurantPoints_create", "description": "Activa o desactiva los puntos de lealtad de un restaurante.", "parameters": [], "responses": {"200": {"description": "Operación exitosa", "examples": {"application/json": {"message": "Puntos de lealtad activados.", "lealtad_points": true}}}, "404": {"description": "Restaurante no encontrado.", "examples": {"application/json": {"error": "Restaurante no encontrado."}}}}, "tags": ["administrator"]}, "parameters": [{"name": "restaurante_id", "in": "path", "required": true, "type": "string"}]}, "/administrator/deleteUser/": {"post": {"operationId": "administrator_deleteUser_create", "description": "Elimina un usuario por su username y email.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"username": {"description": "Nombre de usuario del usuario a eliminar", "type": "string"}, "email": {"description": "Email del usuario a eliminar", "type": "string"}, "role": {"description": "Rol del usuario a eliminar", "type": "string"}}}}], "responses": {"200": {"description": "Usuario eliminado exitosamente"}, "400": {"description": "Error al eliminar usuario"}}, "tags": ["administrator"]}, "parameters": []}, "/administrator/editUserById/{user_id}/": {"put": {"operationId": "administrator_editUserById_update", "description": "Edita un usuario por su ID, excluyendo los usuarios con rol 'customer'.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EditUser"}}], "responses": {"200": {"description": "Usuario actualizado.", "schema": {"type": "object", "properties": {"message": {"type": "string"}, "user": {"type": "object", "properties": {"id": {"type": "integer"}, "username": {"type": "string"}, "email": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}, "role": {"type": "string"}}}}}}, "400": {"description": "Error al actualizar el usuario"}, "404": {"description": "Usuario no encontrado o no editable"}}, "tags": ["administrator"]}, "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}]}, "/administrator/getUserById/{user_id}/": {"get": {"operationId": "administrator_getUserById_read", "description": "Obtiene un usuario específico por su ID, excluyendo los usuarios con rol 'customer'.", "parameters": [], "responses": {"200": {"description": "Usuario encontrado por ID.", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "username": {"type": "string"}, "email": {"type": "string"}, "role": {"type": "string"}}}}, "404": {"description": "Usuario no encontrado"}}, "tags": ["administrator"]}, "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}]}, "/administrator/getUserByUsername/{username}/": {"get": {"operationId": "administrator_getUserByUsername_read", "description": "Obtiene un usuario específico por su username, excluyendo los usuarios con rol 'customer'.", "parameters": [], "responses": {"200": {"description": "Usuario encontrado por username.", "schema": {"type": "object", "properties": {"id": {"type": "integer"}, "username": {"type": "string"}, "email": {"type": "string"}, "role": {"type": "string"}}}}, "404": {"description": "Usuario no encontrado"}}, "tags": ["administrator"]}, "parameters": [{"name": "username", "in": "path", "required": true, "type": "string"}]}, "/administrator/getUsers/": {"get": {"operationId": "administrator_getUsers_list", "description": "Obtiene todos los usuarios, excluyendo a los que tienen rol 'customer'.", "parameters": [], "responses": {"200": {"description": "Lista de usuarios excluyendo los de rol \"customer\".", "schema": {"type": "array", "items": {"type": "object", "properties": {"id": {"type": "integer"}, "username": {"type": "string"}, "email": {"type": "string"}, "role": {"type": "string"}}}}}, "400": {"description": "Error al obtener los usuarios"}}, "tags": ["administrator"]}, "parameters": []}, "/api/token/": {"post": {"operationId": "api_token_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["api"]}, "parameters": []}, "/api/token/refresh/": {"post": {"operationId": "api_token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["api"]}, "parameters": []}, "/auth/login/": {"post": {"operationId": "auth_login_create", "description": "Authenticate a user and provide JWT tokens.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"username": {"description": "Username", "type": "string"}, "password": {"description": "Password", "type": "string"}}}}], "responses": {"200": {"description": "Login successful.", "schema": {"$ref": "#/definitions/Register"}}, "400": {"description": "Bad request"}}, "tags": ["auth"]}, "parameters": []}, "/auth/register/": {"post": {"operationId": "auth_register_create", "description": "Register a new user and generate access tokens.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Register"}}], "responses": {"201": {"description": "User registered successfully.", "schema": {"$ref": "#/definitions/Register"}}, "400": {"description": "Bad request"}}, "tags": ["auth"]}, "parameters": []}, "/customer/addCupon/{customer_id}/": {"post": {"operationId": "customer_addCupon_create", "description": "Crea un cupón de descuento para un cliente.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["discount_amount"], "type": "object", "properties": {"discount_amount": {"description": "Monto de descuento", "type": "number", "format": "float"}}}}], "responses": {"201": {"description": "Cupón creado con éxito.", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de éxito", "type": "string"}, "coupon": {"type": "object", "properties": {"id": {"description": "ID del cupón", "type": "integer"}, "discount_amount": {"description": "Monto de descuento", "type": "number", "format": "float"}, "expires_at": {"description": "Fecha de expiración del cupón", "type": "string", "format": "date-time"}}}}}}, "404": {"description": "Cliente no encontrado.", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de error", "type": "string"}}}}}, "tags": ["customer"]}, "parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}]}, "/customer/addLoyaltyPoints/{customer_id}/": {"post": {"operationId": "customer_addLoyaltyPoints_create", "description": "Añade puntos de lealtad a un cliente.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["points"], "type": "object", "properties": {"points": {"description": "Cantidad de puntos a añadir", "type": "integer"}}}}, {"name": "Authorization", "in": "header", "description": "Token JWT Bearer", "required": true, "type": "string"}, {"name": "customer_id", "in": "path", "description": "ID del cliente al que se le añadirán los puntos", "required": true, "type": "integer"}], "responses": {"200": {"description": "Puntos añadidos exitosamente.", "schema": {"type": "object", "properties": {"message": {"description": "Mensaje de éxito", "type": "string"}, "total_points": {"description": "Total de puntos del cliente", "type": "integer"}}}}, "400": {"description": "Error en la solicitud (por ejemplo, cantidad de puntos no válida).", "schema": {"type": "object", "properties": {"error": {"description": "Mensaje de error", "type": "string"}}}}, "404": {"description": "Cliente no encontrado.", "schema": {"type": "object", "properties": {"error": {"description": "Mensaje de error", "type": "string"}}}}}, "tags": ["customer"]}, "parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}]}, "/customer/addToCart/": {"post": {"operationId": "customer_addToCart_create", "description": "Agrega un item al carrito del cliente. Si el item ya existe, se actualiza la cantidad.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["food_item", "quantity"], "type": "object", "properties": {"food_item": {"description": "ID del item de comida a agregar al carrito.", "type": "integer"}, "quantity": {"description": "Cantidad del item de comida a agregar al carrito.", "type": "integer"}}}}, {"name": "Authorization", "in": "header", "description": "Token JWT Bearer", "required": true, "type": "string"}], "responses": {"200": {"description": "Item agregado exitosamente al carrito.", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de éxito.", "type": "string"}}}}, "400": {"description": "Error en la solicitud (por ejemplo, item de comida no existe o cantidad no válida).", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de error.", "type": "string"}}}}}, "tags": ["customer"]}, "parameters": []}, "/customer/asignAddress/": {"post": {"operationId": "customer_asignAddress_create", "description": "Asigna una dirección a un cliente. requiere Bearer TOKEN", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["address"], "type": "object", "properties": {"address": {"description": "Dirección del cliente", "type": "string"}}}}], "responses": {"200": {"description": "Dirección asignada exitosamente.", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de éxito", "type": "string"}}}}, "400": {"description": "Error con la solicitud (dirección vacía).", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de error", "type": "string"}}}}}, "tags": ["customer"]}, "parameters": []}, "/customer/asignPhoneNumber/": {"post": {"operationId": "customer_asignPhoneNumber_create", "description": "Asigna un número de teléfono a un cliente. Requiere Berar Token", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["phone"], "type": "object", "properties": {"phone": {"description": "Número de teléfono del cliente", "type": "string"}}}}], "responses": {"200": {"description": "Número de teléfono asignado exitosamente.", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de éxito", "type": "string"}}}}, "400": {"description": "Error con la solicitud (número de teléfono inválido).", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de error", "type": "string"}}}}}, "tags": ["customer"]}, "parameters": []}, "/customer/deleteCartItem/{food_item_name}/": {"delete": {"operationId": "customer_deleteCartItem_delete", "description": "Elimina un item del carrito del usuario por su nombre.", "parameters": [{"name": "Authorization", "in": "header", "description": "Token JWT Bearer", "required": true, "type": "string"}, {"name": "food_item_name", "in": "path", "description": "Nombre del item de comida a eliminar", "required": true, "type": "string"}], "responses": {"204": {"description": "Item de carrito eliminado exitosamente."}, "400": {"description": "Error en la solicitud (por ejemplo, el carrito o el item no existen).", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de error.", "type": "string"}}}}}, "tags": ["customer"]}, "parameters": [{"name": "food_item_name", "in": "path", "required": true, "type": "string"}]}, "/customer/deleteCupon/{coupon_id}/": {"delete": {"operationId": "customer_deleteCupon_delete", "description": "Elimina un cupón específico de un cliente.", "parameters": [], "responses": {"200": {"description": "Cupón eliminado con éxito.", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de éxito", "type": "string"}}}}, "404": {"description": "Cupón no encontrado.", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de error", "type": "string"}}}}}, "tags": ["customer"]}, "parameters": [{"name": "coupon_id", "in": "path", "required": true, "type": "string"}]}, "/customer/deleteLoyaltyPoints/{customer_id}/": {"delete": {"operationId": "customer_deleteLoyaltyPoints_delete", "description": "Elimina todos los puntos de lealtad de un cliente.", "parameters": [], "responses": {"200": {"description": "Puntos eliminados exitosamente.", "schema": {"type": "object", "properties": {"message": {"description": "Mensaje de éxito", "type": "string"}}}}, "404": {"description": "Cliente no encontrado.", "schema": {"type": "object", "properties": {"error": {"description": "Mensaje de error", "type": "string"}}}}}, "tags": ["customer"]}, "parameters": [{"name": "customer_id", "in": "path", "required": true, "type": "string"}]}, "/customer/getCartItems/": {"get": {"operationId": "customer_getCartItems_list", "description": "Obtiene todos los items del carrito de un cliente autenticado.", "parameters": [{"name": "Authorization", "in": "header", "description": "Token JWT Bearer", "required": true, "type": "string"}], "responses": {"200": {"description": "Items del carrito, puntos y cupones disponibles.", "schema": {"type": "object", "properties": {"cart_items": {"type": "array", "items": {"type": "object", "properties": {"name": {"description": "Nombre del item de comida", "type": "string"}, "description": {"description": "Descripción del item de comida", "type": "string"}, "category": {"description": "Categoría del item", "type": "string"}, "unitPrice": {"description": "Precio unitario", "type": "number", "format": "float"}, "stockRestaurant": {"description": "Stock disponible en el restaurante", "type": "integer"}, "image": {"description": "URL de la imagen del item", "type": "string"}, "quantity": {"description": "Cantidad en el carrito", "type": "integer"}, "totalPrice": {"description": "Precio total por cantidad", "type": "number", "format": "float"}}}}, "total_points": {"description": "Puntos de lealtad disponibles", "type": "integer"}, "available_coupons": {"type": "array", "items": {"type": "object", "properties": {"id": {"description": "ID del cupón", "type": "integer"}, "discount_amount": {"description": "Monto de descuento del cupón", "type": "number", "format": "float"}, "created_at": {"description": "Fecha de creación del cupón", "type": "string"}}}}}}}, "400": {"description": "Error en la solicitud (por ejemplo, carrito no encontrado).", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de error.", "type": "string"}}}}}, "tags": ["customer"]}, "parameters": []}, "/customer/viewProfile/": {"get": {"operationId": "customer_viewProfile_list", "description": "Obtiene el perfil del cliente.", "parameters": [], "responses": {"200": {"description": "Perfil del cliente obtenido exitosamente.", "schema": {"$ref": "#/definitions/CustomerProfile"}}, "400": {"description": "Error con la solicitud.", "schema": {"type": "object", "properties": {"detail": {"description": "Mensaje de error", "type": "string"}}}}}, "tags": ["customer"]}, "parameters": []}, "/delivery_person/changeIsOnline/{delivery_person_id}/": {"post": {"operationId": "delivery_person_changeIsOnline_create", "description": "Actualiza el estado de 'is_online' de un repartidor", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"is_online": {"description": "Estado del repartidor (1 o 0)", "type": "integer"}}}}], "responses": {"200": {"description": "Estado actualizado con éxito"}, "400": {"description": "Error: el valor de is_online debe ser 1 (True) o 0 (False)"}, "404": {"description": "Error: el repartidor no existe"}}, "tags": ["delivery_person"]}, "parameters": [{"name": "delivery_person_id", "in": "path", "required": true, "type": "string"}]}, "/delivery_person/changeOrderStatus/{pedido_id}/": {"post": {"operationId": "delivery_person_changeOrderStatus_create", "description": "Cambia el estado de un pedido asociado al repartidor autenticado", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"status": {"description": "Nuevo estado del pedido", "type": "string"}}}}], "responses": {"200": {"description": "Estado del pedido actualizado con éxito"}, "403": {"description": "Error: No tiene permiso para cambiar el estado de este pedido"}, "400": {"description": "Error: Estado inválido"}, "404": {"description": "Error: El pedido no existe"}}, "tags": ["delivery_person"]}, "parameters": [{"name": "pedido_id", "in": "path", "required": true, "type": "string"}]}, "/delivery_person/deleteOrder/{pedido_id}": {"delete": {"operationId": "delivery_person_deleteOrder_delete", "description": "Elimina un pedido asociado al repartidor autenticado", "parameters": [], "responses": {"204": {"description": "Pedido eliminado con éxito"}, "403": {"description": "Error: No tiene permiso para eliminar este pedido"}, "400": {"description": "Error: No se puede eliminar el pedido debido a su estado"}, "404": {"description": "Error: El pedido no existe"}}, "tags": ["delivery_person"]}, "parameters": [{"name": "pedido_id", "in": "path", "required": true, "type": "string"}]}, "/delivery_person/viewOrders/": {"get": {"operationId": "delivery_person_viewOrders_list", "description": "Obtiene los pedidos asociados al repartidor autenticado", "parameters": [], "responses": {"200": {"description": "Lista de pedidos", "examples": {"application/json": [{"id": 1, "created_at": "2024-12-03T10:00:00Z", "description": "Pedido de pizza", "address": "Calle 123", "status": "Pendiente", "customer_name": "Juan Pérez", "customer_email": "juan@example.com", "customer_phone": "123456789", "food_items": [{"food_item_name": "Pizza Margherita", "food_item_price": 10.0, "quantity": 2, "food_item_description": "Pizza con tomate y queso", "food_item_image": "url-a-imagen.jpg"}]}]}}, "404": {"description": "Error: El repartidor no tiene pedidos asociados"}}, "tags": ["delivery_person"]}, "parameters": []}, "/menu_manager/add_food_item/": {"post": {"operationId": "menu_manager_add_food_item_create", "description": "Agregar un item de comida al restaurante con id 1.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FoodItem"}}], "responses": {"201": {"description": "Item de comida agregado correctamente", "examples": {"application/json": {"message": "Food item agregado al restaurante exitosamente", "food_item_id": 1}}}, "400": {"description": "Bad Request"}, "404": {"description": "Restaurante no encontrado"}}, "tags": ["menu_manager"]}, "parameters": []}, "/menu_manager/changeFoodItemStatus/{fooditem_id}/": {"post": {"operationId": "menu_manager_changeFoodItemStatus_create", "description": "Cambiar el estado de un item de comida.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"isActive": {"type": "boolean"}}}}], "responses": {"200": {"description": "Estado actualizado exitosamente"}, "404": {"description": "Food item no encontrado"}, "400": {"description": "Bad Request"}}, "tags": ["menu_manager"]}, "parameters": [{"name": "fooditem_id", "in": "path", "required": true, "type": "string"}]}, "/menu_manager/deleteFoodItem/{food_item_id}/": {"delete": {"operationId": "menu_manager_deleteFoodItem_delete", "description": "Eliminar un item de comida por su id.", "parameters": [], "responses": {"204": {"description": "No Content"}, "404": {"description": "Food item no encontrado"}}, "tags": ["menu_manager"]}, "parameters": [{"name": "food_item_id", "in": "path", "required": true, "type": "string"}]}, "/menu_manager/editFoodItem/{food_item_id}/": {"put": {"operationId": "menu_manager_editFoodItem_update", "description": "Actualizar los detalles de un item de comida por su id.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/FoodItem"}}], "responses": {"200": {"description": "Food item actualizado exitosamente", "examples": {"application/json": {"message": "Food item actualizado exitosamente", "food_item_id": 1}}}, "404": {"description": "Food item no encontrado"}, "400": {"description": "Bad Request"}}, "tags": ["menu_manager"]}, "parameters": [{"name": "food_item_id", "in": "path", "required": true, "type": "string"}]}, "/menu_manager/getActiveFoodItems/": {"get": {"operationId": "menu_manager_getActiveFoodItems_list", "description": "Obtener los items de comida activos.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/FoodItem"}}}}, "tags": ["menu_manager"]}, "parameters": []}, "/menu_manager/getFoodItemById/{food_item_id}/": {"get": {"operationId": "menu_manager_getFoodItemById_read", "description": "Obtener un item de comida por su id.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FoodItem"}}, "404": {"description": "Food item no encontrado"}}, "tags": ["menu_manager"]}, "parameters": [{"name": "food_item_id", "in": "path", "required": true, "type": "string"}]}, "/menu_manager/getFoodItems/": {"get": {"operationId": "menu_manager_getFoodItems_list", "description": "Obtener todos los items de comida.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/FoodItem"}}}}, "tags": ["menu_manager"]}, "parameters": []}, "/menu_manager/getOneFood/": {"get": {"operationId": "menu_manager_getOneFood_list", "description": "Obtener un item de comida por su nombre y categoría.", "parameters": [{"name": "name", "in": "query", "description": "Nombre del item de comida", "type": "string"}, {"name": "category", "in": "query", "description": "Categoría del item de comida", "type": "string"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/FoodItem"}}, "400": {"description": "Bad Request"}, "404": {"description": "Food item no encontrado"}}, "tags": ["menu_manager"]}, "parameters": []}, "/order_dispatcher/updateStatus/{pedido_id}/": {"post": {"operationId": "order_dispatcher_updateStatus_create", "summary": "Actualiza el estado de un pedido y asigna un repartidor si es necesario. Requiere TOKEN", "description": "Actualizar el estado de un pedido por el dispatcher.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["status"], "type": "object", "properties": {"status": {"description": "Nuevo estado del pedido.", "type": "string"}}}}], "responses": {"200": {"description": "El estado del pedido fue actualizado exitosamente.", "examples": {"application/json": {"message": "Estado del pedido 1 actualizado a InDelivery con éxito. Asignado al repartidor juan123."}}}, "400": {"description": "Error: El estado del pedido es inválido o no se puede cambiar.", "examples": {"application/json": {"message": "El pedido solo puede cambiar de Pendiente a Cocina."}}}, "404": {"description": "Error: El pedido no existe.", "examples": {"application/json": {"message": "El pedido no existe."}}}}, "tags": ["order_dispatcher"]}, "parameters": [{"name": "pedido_id", "in": "path", "required": true, "type": "string"}]}, "/order_manager/cancelOrder/{pedido_id}/": {"post": {"operationId": "order_manager_cancelOrder_create", "description": "Cancelar un pedido mediante su ID.", "parameters": [{"name": "pedido_id", "in": "path", "description": "ID del pedido a cancelar", "type": "integer", "required": true}], "responses": {"200": {"description": "Pedido cancelado con éxito.", "schema": {"type": "object", "properties": {"message": {"description": "Mensaje de éxito", "type": "string"}}}}, "400": {"description": "El pedido ya está cancelado o no se encuentra.", "schema": {"type": "object", "properties": {"message": {"description": "Mensaje de error", "type": "string"}}}}, "404": {"description": "Pedido no encontrado.", "schema": {"type": "object", "properties": {"message": {"description": "Mensaje de error", "type": "string"}}}}}, "tags": ["order_manager"]}, "parameters": [{"name": "pedido_id", "in": "path", "required": true, "type": "string"}]}, "/order_manager/createOrder/": {"post": {"operationId": "order_manager_createOrder_create", "description": "Crear un nuevo pedido en el sistema. pasa una lista de ids de fooditems", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Pedido"}}], "responses": {"201": {"description": "Pedido creado con éxito", "schema": {"$ref": "#/definitions/Pedido"}}, "400": {"description": "Error al crear el pedido", "schema": {"type": "object", "properties": {"detail": {"description": "Descripción del error", "type": "string"}}}}}, "tags": ["order_manager"]}, "parameters": []}, "/order_manager/deleteOrder/{pedido_id}/": {"delete": {"operationId": "order_manager_deleteOrder_delete", "description": "Borrar un pedido cancelado mediante su ID.", "parameters": [{"name": "pedido_id", "in": "path", "description": "ID del pedido a borrar", "type": "integer", "required": true}], "responses": {"200": {"description": "Pedido borrado con éxito.", "schema": {"type": "object", "properties": {"message": {"description": "Mensaje de éxito", "type": "string"}}}}, "400": {"description": "El pedido no está cancelado o no puede ser borrado.", "schema": {"type": "object", "properties": {"message": {"description": "Mensaje de error", "type": "string"}}}}, "404": {"description": "Pedido no encontrado.", "schema": {"type": "object", "properties": {"message": {"description": "Mensaje de error", "type": "string"}}}}}, "tags": ["order_manager"]}, "parameters": [{"name": "pedido_id", "in": "path", "required": true, "type": "string"}]}, "/order_manager/linkDeliveryToOrder/": {"post": {"operationId": "order_manager_linkDeliveryToOrder_create", "description": "Asocia un repartidor a un pedido.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["pedido_id", "delivery_person_id"], "type": "object", "properties": {"pedido_id": {"description": "ID del pedido", "type": "integer"}, "delivery_person_id": {"description": "ID del repartidor", "type": "integer"}}}}], "responses": {"200": {"description": "Pedido asociado exitosamente al repartidor.", "schema": {"type": "object", "properties": {"message": {"description": "Mensaje de éxito", "type": "string"}}}}, "400": {"description": "Debe proporcionar tanto el ID del pedido como el del repartidor, o el pedido ya tiene un repartidor asignado."}, "404": {"description": "Pedido o repartidor no encontrado."}, "500": {"description": "Error al asociar el repartidor al pedido."}}, "tags": ["order_manager"]}, "parameters": []}, "/order_manager/viewAllDeliverysForStatus/": {"get": {"operationId": "order_manager_viewAllDeliverysForStatus_list", "description": "Obtiene la lista de repartidores filtrada por su estado online.", "parameters": [{"name": "is_online", "in": "query", "description": "Estado online del repartidor", "type": "boolean"}], "responses": {"200": {"description": "Lista de repartidores", "schema": {"$ref": "#/definitions/DeliveryPerson"}}, "400": {"description": "Debe proporcionar el estado is_online (True o False)."}, "500": {"description": "Error al obtener los repartidores."}}, "tags": ["order_manager"]}, "parameters": []}, "/order_manager/viewAllDeliverysPagination/": {"get": {"operationId": "order_manager_viewAllDeliverysPagination_list", "description": "Obtiene la lista paginada de repartidores filtrada por su estado online.", "parameters": [{"name": "is_online", "in": "query", "description": "Estado online del repartidor", "type": "boolean"}], "responses": {"200": {"description": "Lista paginada de repartidores", "schema": {"$ref": "#/definitions/DeliveryPerson"}}, "400": {"description": "Debe proporcionar el estado is_online (True o False)."}, "500": {"description": "Error al obtener los repartidores."}}, "tags": ["order_manager"]}, "parameters": []}, "/order_manager/viewAllOrders/": {"get": {"operationId": "order_manager_viewAllOrders_list", "description": "Obtener todos los pedidos en el sistema, con paginación.", "parameters": [], "responses": {"200": {"description": "Lista de pedidos paginada.", "schema": {"type": "array", "items": {"$ref": "#/definitions/PedidoSerializerPersonalizado"}}}, "400": {"description": "Error al obtener los pedidos.", "schema": {"type": "object", "properties": {"detail": {"description": "Descripción del error", "type": "string"}}}}}, "tags": ["order_manager"]}, "parameters": []}, "/order_manager/viewOrderDetail/{pedido_id}/": {"get": {"operationId": "order_manager_viewOrderDetail_read", "description": "Obtener detalles de un pedido mediante su ID.", "parameters": [{"name": "pedido_id", "in": "path", "description": "ID del pedido", "type": "integer", "required": true}], "responses": {"200": {"description": "Detalles del pedido.", "schema": {"$ref": "#/definitions/PedidoSerializerPersonalizado"}}, "404": {"description": "Pedido no encontrado.", "schema": {"type": "object", "properties": {"message": {"description": "Mensaje de error", "type": "string"}}}}}, "tags": ["order_manager"]}, "parameters": [{"name": "pedido_id", "in": "path", "required": true, "type": "string"}]}, "/order_manager/viewOrdersForStatus/": {"get": {"operationId": "order_manager_viewOrdersForStatus_list", "description": "Obtener todos los pedidos filtrados por el estado.", "parameters": [{"name": "status", "in": "query", "description": "Estado de los pedidos a filtrar", "type": "string"}], "responses": {"200": {"description": "Lista de pedidos filtrados por estado.", "schema": {"type": "array", "items": {"$ref": "#/definitions/PedidoSerializerPersonalizado"}}}, "400": {"description": "No se proporcionó un estado.", "schema": {"type": "object", "properties": {"message": {"description": "Mensaje de error", "type": "string"}}}}, "404": {"description": "No se encontraron pedidos con el estado proporcionado.", "schema": {"type": "object", "properties": {"message": {"description": "Mensaje de error", "type": "string"}}}}}, "tags": ["order_manager"]}, "parameters": []}, "/pedidos/cancelOrderUser/{order_id}/": {"post": {"operationId": "pedidos_cancelOrderUser_create", "description": "Cancela un pedido si no ha sido completado aún.", "parameters": [], "responses": {"200": {"description": "Pedido cancelado exitosamente", "schema": {"type": "object", "properties": {"order_id": {"type": "integer"}, "customer_id": {"type": "integer"}, "username": {"type": "string"}, "status": {"type": "string"}}}}, "400": {"description": "Error al intentar cancelar el pedido", "schema": {"type": "object", "properties": {"detail": {"type": "string"}}}}}, "tags": ["pedidos"], "security": [{"Bearer": []}]}, "parameters": [{"name": "order_id", "in": "path", "required": true, "type": "string"}]}, "/pedidos/deleteOrderUser/{order_id}/": {"delete": {"operationId": "pedidos_deleteOrderUser_delete", "description": "Elimina un pedido si está cancelado o entregado.", "parameters": [], "responses": {"204": {"description": "Pedido eliminado exitosamente"}, "400": {"description": "El pedido debe ser cancelado o entregado para ser eliminado", "schema": {"type": "object", "properties": {"detail": {"type": "string"}}}}}, "tags": ["pedidos"], "security": [{"Bearer": []}]}, "parameters": [{"name": "order_id", "in": "path", "required": true, "type": "string"}]}, "/pedidos/listUserOrders/": {"get": {"operationId": "pedidos_listUserOrders_list", "description": "Obtiene todos los pedidos de un cliente autenticado.", "parameters": [], "responses": {"200": {"description": "Lista de pedidos del cliente", "schema": {"type": "array", "items": {"type": "object", "properties": {"order_id": {"type": "integer"}, "customer_id": {"type": "integer"}, "username": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}, "email": {"type": "string"}, "phone": {"type": "string"}, "address": {"type": "string"}, "total_price": {"type": "string"}, "status": {"type": "string"}}}}}, "400": {"description": "Error al obtener los pedidos", "schema": {"type": "object", "properties": {"error": {"type": "string"}}}}}, "tags": ["pedidos"], "security": [{"Bearer": []}]}, "parameters": []}, "/pedidos/userCartToOrder/": {"post": {"operationId": "procesar_pedido", "description": "Procesa un pedido realizado por un cliente, con la opción de usar puntos de lealtad y cupones.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {"address": {"description": "Dirección del cliente.", "type": "string"}, "points_to_use": {"description": "Puntos de lealtad a usar (opcional).", "type": "integer"}, "coupon_id": {"description": "ID del cupón (opcional).", "type": "integer"}}}}], "responses": {"201": {"description": "Pedido procesado exitosamente", "schema": {"type": "object", "properties": {"message": {"type": "string"}, "order_id": {"type": "integer"}, "total_price": {"type": "number", "format": "float"}}}}, "400": {"description": "Error en el procesamiento del pedido", "schema": {"type": "object", "properties": {"error": {"type": "string"}}}}}, "tags": ["pedidos"], "security": [{"Bearer": []}]}, "parameters": []}, "/pedidos/viewOrderUser/{pedido_id}/": {"get": {"operationId": "pedidos_viewOrderUser_read", "description": "Obtiene los detalles de un pedido específico del cliente autenticado.", "parameters": [], "responses": {"200": {"description": "Detalles del pedido", "schema": {"type": "object", "properties": {"order_id": {"type": "integer"}, "customer_id": {"type": "integer"}, "username": {"type": "string"}, "first_name": {"type": "string"}, "last_name": {"type": "string"}, "email": {"type": "string"}, "phone": {"type": "string"}, "address": {"type": "string"}, "total_price": {"type": "string"}, "food_items": {"type": "array", "items": {"type": "object", "properties": {"food_item_name": {"type": "string"}, "food_item_price": {"type": "number"}, "quantity": {"type": "integer"}, "food_item_image": {"type": "string", "nullable": true}, "food_item_description": {"type": "string"}}}}, "status": {"type": "string"}}}}, "400": {"description": "Error de validación o pedido no encontrado", "schema": {"type": "object", "properties": {"error": {"type": "string"}}}}}, "tags": ["pedidos"], "security": [{"Bearer": []}]}, "parameters": [{"name": "pedido_id", "in": "path", "required": true, "type": "string"}]}}, "definitions": {"EditUser": {"required": ["username", "email"], "type": "object", "properties": {"username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}, "role": {"title": "Role", "type": "string", "enum": ["administrator", "customer", "menu_manager", "delivery_person", "order_manager", "order_dispatcher"]}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenObtainPair": {"required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}, "Register": {"required": ["username", "password", "email", "first_name", "last_name", "role"], "type": "object", "properties": {"username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "minLength": 1}, "last_name": {"title": "Last name", "type": "string", "minLength": 1}, "role": {"title": "Role", "type": "string", "enum": ["administrator", "customer", "menu_manager", "delivery_person", "order_manager", "order_dispatcher"]}}}, "LoyaltyPoint": {"type": "object", "properties": {"points": {"title": "Points", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}}}, "Coupon": {"type": "object", "properties": {"discount_amount": {"title": "Discount amount", "type": "string", "format": "decimal"}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "expires_at": {"title": "Expires at", "type": "string", "format": "date-time"}}}, "CustomerProfile": {"required": ["loyalty_points", "coupons", "first_name", "last_name", "email", "phone"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "customer_addres": {"title": "Customer addres", "type": "string", "maxLength": 255, "x-nullable": true}, "comprasRealizadas": {"title": "ComprasRealizadas", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "loyalty_points": {"type": "array", "items": {"$ref": "#/definitions/LoyaltyPoint"}}, "coupons": {"type": "array", "items": {"$ref": "#/definitions/Coupon"}}, "first_name": {"title": "First name", "type": "string", "minLength": 1}, "last_name": {"title": "Last name", "type": "string", "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}, "phone": {"title": "Phone", "type": "integer"}}}, "FoodItem": {"required": ["name", "description", "category", "unitPrice"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "maxLength": 255, "minLength": 1}, "category": {"title": "Category", "type": "string", "maxLength": 255, "minLength": 1}, "unitPrice": {"title": "UnitPrice", "type": "number"}, "stockRestaurant": {"title": "StockRestaurant", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "image": {"title": "Image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}}}, "Pedido": {"required": ["address", "description", "food_items"], "type": "object", "properties": {"customer_name": {"title": "Customer name", "type": "string", "maxLength": 255, "x-nullable": true}, "customer_email": {"title": "Customer email", "type": "string", "format": "email", "maxLength": 255, "x-nullable": true}, "customer_phone": {"title": "Customer phone", "type": "string", "maxLength": 20, "x-nullable": true}, "address": {"title": "Address", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "maxLength": 255, "minLength": 1}, "food_items": {"type": "array", "items": {"type": "object", "additionalProperties": {"type": "integer"}}}}}, "DeliveryPerson": {"required": ["first_name", "last_name", "email", "role"], "type": "object", "properties": {"first_name": {"title": "First name", "type": "string", "minLength": 1}, "last_name": {"title": "Last name", "type": "string", "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}, "role": {"title": "Role", "type": "string", "minLength": 1}}}, "PedidoFoodItem": {"type": "object", "properties": {"food_item_name": {"title": "Food item name", "type": "string", "maxLength": 255, "x-nullable": true}, "food_item_price": {"title": "Food item price", "type": "string", "format": "decimal"}, "quantity": {"title": "Quantity", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "food_item_description": {"title": "Food item description", "type": "string", "maxLength": 255, "x-nullable": true}, "food_item_image": {"title": "Food item image", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}}}, "PedidoSerializerPersonalizado": {"required": ["description", "address", "status", "food_items"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "description": {"title": "Description", "type": "string", "maxLength": 255, "minLength": 1}, "address": {"title": "Address", "type": "string", "maxLength": 255, "minLength": 1}, "status": {"title": "Status", "type": "string", "maxLength": 255, "minLength": 1}, "customer_name": {"title": "Customer name", "type": "string", "maxLength": 255, "x-nullable": true}, "customer_email": {"title": "Customer email", "type": "string", "format": "email", "maxLength": 255, "x-nullable": true}, "customer_phone": {"title": "Customer phone", "type": "string", "maxLength": 20, "x-nullable": true}, "order_manager": {"title": "Order manager", "type": "integer", "x-nullable": true}, "order_dispatcher": {"title": "Order dispatcher", "type": "integer", "x-nullable": true}, "delivery_person": {"title": "Delivery person", "type": "integer", "x-nullable": true}, "Total": {"title": "Total", "type": "string", "format": "decimal"}, "food_items": {"type": "array", "items": {"$ref": "#/definitions/PedidoFoodItem"}}}}}}